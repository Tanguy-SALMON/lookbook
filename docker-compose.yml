version: "3.8"

services:
  # Ollama service for LLM models
  ollama:
    image: ollama/ollama:latest
    container_name: lookbook-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # FastAPI application
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: lookbook-mpc-api
    ports:
      - "8000:8000"
    environment:
      - OLLAMA_HOST=http://ollama:11434
      - OLLAMA_VISION_MODEL=qwen2.5-vl:7b
      - OLLAMA_TEXT_MODEL=qwen3:4b # Use 4B variant for faster inference
      - S3_BASE_URL=${S3_BASE_URL:-https://your-s3-bucket.s3.amazonaws.com}
      - LOOKBOOK_DB_URL=sqlite:///./lookbook.db
      - MYSQL_SHOP_URL=${MYSQL_SHOP_URL}
      - LOG_LEVEL=INFO
      - TZ=UTC
    volumes:
      - ./lookbook.db:/app/lookbook.db
      - ./logs:/app/logs
    depends_on:
      ollama:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Vision sidecar service
  vision:
    build:
      context: .
      dockerfile: Dockerfile.vision
    container_name: lookbook-mpc-vision
    ports:
      - "8001:8001"
    environment:
      - OLLAMA_HOST=http://ollama:11434
      - OLLAMA_VISION_MODEL=qwen2.5-vl:7b
      - LOG_LEVEL=INFO
      - TZ=UTC
    depends_on:
      ollama:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: lookbook-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
      - vision
    restart: unless-stopped
    profiles:
      - nginx

  # Database initialization (optional)
  db-init:
    build:
      context: .
      dockerfile: Dockerfile.init
    container_name: lookbook-db-init
    environment:
      - LOOKBOOK_DB_URL=sqlite:///./lookbook.db
    volumes:
      - ./lookbook.db:/app/lookbook.db
    depends_on:
      - api
    profiles:
      - init

volumes:
  ollama_data:

networks:
  default:
    name: lookbook-network
